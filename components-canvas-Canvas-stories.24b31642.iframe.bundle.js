"use strict";(self.webpackChunknextjs_template=self.webpackChunknextjs_template||[]).push([[477],{"./src/components/canvas/Canvas.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Canvas_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),ReactKonva=__webpack_require__("./node_modules/react-konva/es/ReactKonva.js"),use_immer_module=__webpack_require__("./node_modules/use-immer/dist/use-immer.module.mjs"),next_image=__webpack_require__("./node_modules/@storybook/nextjs/dist/images/next-image.mjs");const mock_map={src:"static/media/mock-map.e1b0bb2c.png",height:502,width:472,blurDataURL:"static/media/mock-map.e1b0bb2c.png"};var Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),console=__webpack_require__("./node_modules/console-browserify/index.js");const Canvas_stories={component:function Canvas(){const[currentAreaIndex,setCurrentAreaIndex]=(0,use_immer_module.e)(1),[mode,setMode]=(0,use_immer_module.e)("draw"),[area,setArea]=(0,use_immer_module.e)({1:{coord:[],finishDraw:!1},2:{coord:[],finishDraw:!1},3:{coord:[],finishDraw:!1}}),currentArea=area[currentAreaIndex],areaEntries=Object.entries(area),[dragRecord,setDragRecord]=(0,use_immer_module.e)([]),[rerender,setRerender]=(0,use_immer_module.e)(0);return(0,jsx_runtime.jsxs)(Stack.A,{children:["Current area: ",currentAreaIndex,(0,jsx_runtime.jsxs)(Box.A,{children:[(0,jsx_runtime.jsx)("button",{onClick:()=>{setCurrentAreaIndex(1),setMode(area[1].finishDraw?"move":"draw")},disabled:1===currentAreaIndex,children:"Area 1"}),(0,jsx_runtime.jsx)("button",{onClick:()=>{setCurrentAreaIndex(2),setMode(area[2].finishDraw?"move":"draw")},disabled:2===currentAreaIndex,children:"Area 2"}),(0,jsx_runtime.jsx)("button",{onClick:()=>{setCurrentAreaIndex(3),setMode(area[3].finishDraw?"move":"draw")},disabled:3===currentAreaIndex,children:"Area 3"})]}),"Mode: ",mode,(0,jsx_runtime.jsxs)(Box.A,{children:[(0,jsx_runtime.jsx)("button",{onClick:()=>setMode("draw"),disabled:"draw"===mode||currentArea.finishDraw,children:"Draw"}),(0,jsx_runtime.jsx)("button",{onClick:()=>setMode("move"),disabled:"move"===mode||!currentArea.finishDraw,children:"Move"}),(0,jsx_runtime.jsx)("button",{onClick:()=>{setArea((draft=>{draft[currentAreaIndex].coord=[],draft[currentAreaIndex].finishDraw=!1,setMode("draw")}))},disabled:!currentArea.finishDraw,children:"delete"}),"draw"===mode&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[" ","|"," ",(0,jsx_runtime.jsx)("button",{onClick:()=>{setArea((draft=>{draft[currentAreaIndex].coord.splice(-1)}))},disabled:0===currentArea.coord.length,children:"undo"})]})]}),(0,jsx_runtime.jsxs)(Box.A,{position:"relative",sx:{cursor:"draw"===mode?"crosshair":"pointer"},children:[(0,jsx_runtime.jsx)(next_image.A,{src:mock_map,alt:"",width:500,height:500}),(0,jsx_runtime.jsxs)(ReactKonva.BI,{width:500,height:500,style:{border:"1px solid black",display:"inline-flex",position:"absolute",left:0,top:0},onClick:e=>{if("draw"!==mode)return;const coord=currentArea.coord,mouseX=e.evt.offsetX,mouseY=e.evt.offsetY;if(coord.length>0){const xDiff=Math.abs(mouseX-coord[0].x),yDiff=Math.abs(mouseY-coord[0].y);if(xDiff<10&&yDiff<10)return setArea((draft=>{draft[currentAreaIndex].coord.push({x:coord[0].x,y:coord[0].y}),draft[currentAreaIndex].finishDraw=!0})),void setMode("move")}setArea((draft=>{draft[currentAreaIndex].coord.push({x:mouseX,y:mouseY})}))},children:[areaEntries.map((([area,{coord,finishDraw}])=>(0,jsx_runtime.jsx)(ReactKonva.Wd,{children:coord.length>0&&(0,jsx_runtime.jsx)(ReactKonva.yp,{sceneFunc:function(context){context.beginPath(),context.moveTo(coord[0].x,coord[0].y);for(const[index,{x,y}]of Object.entries(coord)){0!==Number(index)&&context.lineTo(x,y)}finishDraw&&context.closePath(),context.fillStrokeShape(this)},stroke:`rgba(27, 163, 156, ${Number(area)===currentAreaIndex?1:.5})`,strokeWidth:3,fill:finishDraw?`rgba(101, 198, 187, ${Number(area)===currentAreaIndex?.8:.5})`:"rgba(0, 0, 0, 0)",draggable:currentAreaIndex===Number(area)&&"move"===mode,onDragStart:e=>{const mouseX=e.evt.offsetX,mouseY=e.evt.offsetY;console.log(mouseX,mouseY),setDragRecord((draft=>{draft[0]=[mouseX,mouseY]}))},onDragEnd:e=>{const mouseX=e.evt.offsetX,mouseY=e.evt.offsetY;console.log(mouseX,mouseY);const xDiff=mouseX-dragRecord[0][0],yDiff=mouseY-dragRecord[0][1],newCoord=[];for(const{x,y}of coord)newCoord.push({x:x+xDiff,y:y+yDiff});setArea((draft=>{draft[currentAreaIndex].coord=newCoord})),setRerender(rerender+1)},style:{pointer:"cursor"}})},area))),"draw"===mode&&(0,jsx_runtime.jsx)(ReactKonva.Wd,{children:currentArea.coord.map((({x,y},index)=>(0,jsx_runtime.jsx)(ReactKonva.jl,{radius:6,x,y,fill:"white",stroke:"green",strokeWidth:2},index)))})]},rerender)]})]})},title:"Components/Canvas"},Default={args:{}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}}}}]);